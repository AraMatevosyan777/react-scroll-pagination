[{"C:\\Users\\Aro82\\OneDrive\\Рабочий стол\\scroll-pagination\\src\\reportWebVitals.js":"1","C:\\Users\\Aro82\\OneDrive\\Рабочий стол\\scroll-pagination\\src\\App.js":"2"},{"size":362,"mtime":499162500000,"results":"3","hashOfConfig":"4"},{"size":1576,"mtime":1606320539650,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k72bim",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\Aro82\\OneDrive\\Рабочий стол\\scroll-pagination\\src\\reportWebVitals.js",[],"C:\\Users\\Aro82\\OneDrive\\Рабочий стол\\scroll-pagination\\src\\App.js",["11","12","13","14"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport loader from './loader.svg'\n\nconst App = () => {\n  const [photos, setPhotos] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [fetching, setFetching] = useState(1)\n  const [totalCount, setTotalCount] = useState(0)\n  const [loading, setLoading] = useState(0)\n\n  useEffect(()=>{\n    setLoading(true)\n    if(fetching){\n      setTimeout(()=> {\n        axios.get(`https://jsonplaceholder.typicode.com/photos?_limit=10&_page=${currentPage}`)\n    .then(res => {\n      setTotalCount(res.headers['x-total-count'])\n      setPhotos([...photos, ...res.data])\n      setCurrentPage(currentPage + 1)\n      setLoading(false)\n    })\n    .finally(()=> setFetching(false))\n      }, 1000)\n    }\n  }, [fetching])\n\n  useEffect(()=>{\n    document.addEventListener('scroll', scrollHandle)\n    return function(){\n      document.removeEventListener('scroll', scrollHandle)\n    }\n  }, [])\n\n  const scrollHandle = (e) => {\n    if(e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100 \n    // && photos.length < totalCount\n    ){\n      setFetching(true)\n    }\n  }\n\n  return (\n    <div>\n      {photos.map(photo => \n        <div key={photo.id} className='photo'>\n          <div className='title'>{photo.id}. {photo.title}</div>\n          <img src={photo.thumbnailUrl}/>\n        </div>\n        )}\n        {loading && \n          <div className='loader'>\n            <img src={loader}/>\n          </div>\n        }\n    </div>\n  )\n}\n\nexport default App\n",{"ruleId":"15","severity":1,"message":"16","line":9,"column":10,"nodeType":"17","messageId":"18","endLine":9,"endColumn":20},{"ruleId":"19","severity":1,"message":"20","line":26,"column":6,"nodeType":"21","endLine":26,"endColumn":16,"suggestions":"22"},{"ruleId":"23","severity":1,"message":"24","line":48,"column":11,"nodeType":"25","endLine":48,"endColumn":42},{"ruleId":"23","severity":1,"message":"24","line":53,"column":13,"nodeType":"25","endLine":53,"endColumn":32},"no-unused-vars","'totalCount' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage' and 'photos'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentPage(c => ...)' if you only need 'currentPage' in the 'setCurrentPage' call.","ArrayExpression",["26"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"27","fix":"28"},"Update the dependencies array to be: [currentPage, fetching, photos]",{"range":"29","text":"30"},[789,799],"[currentPage, fetching, photos]"]